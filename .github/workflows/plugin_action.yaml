# Reusable action for plugins.
# This performs:
# - linting with flake and pep8-naming
# - publishes to PyPi

# Re-use this workflow with a few lines:
####
#on:
#  push:
#    branches: ['main', 'master']
#  pull_request:
#    types: [opened, edited, reopened]
#  release:
#    types: [published]
#jobs:
#  plugin-action:
#    uses: matmair/inventree-meta-plugin/.github/workflows/plugin_action.yml@v1.1
#    secrets: inherit
####

name: Plugin check action

on:
  workflow_call:
    inputs:
      python_version:
        description: "Python version"
        default: 3.9
        required: false
        type: string
    secrets:
      PYPI_API_TOKEN:
        required: true

jobs:
  style:
    name: Style checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}
      - name: Install style check dependencies
        run: |
          pip install flake8==5.0.4
          pip install pep8-naming==0.13.1
      - name: Check style
        run: |
          flake8 .

  pre-commit:
    name: Pre-commit
    runs-on: ubuntu-latest
    needs: style

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}
      - name: Run pre-commit Checks
        uses: pre-commit/action@646c83fcd040023954eafda54b4db0192ce70507 # pin@v3.0.0

  build-plugin:
    name: Build plugin
    runs-on: ubuntu-latest
    needs: style

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: hynek/build-and-inspect-python-package@v1

  combine:
    name: Wait for all jobs
    runs-on: ubuntu-latest
    needs: [pre-commit, build-plugin]

  publish:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: combine
    name: Publish to PyPi
    runs-on: ubuntu-latest

    steps:
      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: Packages
          path: dist
      - name: Push to private repo
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: ${{ secrets.TWINE_USERNAME }}
          password: ${{ secrets.TWINE_PASSWORD }}
          repository-url: ${{ secrets.TWINE_REPOSITORY_URL }}
